<stix:STIX_Package
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:stix="http://stix.mitre.org/stix-1"
	xmlns:stixCommon="http://stix.mitre.org/common-1"
    xmlns:indicator="http://stix.mitre.org/Indicator-2"
	xmlns:URIObj="http://cybox.mitre.org/objects#URIObject-2" 
	xmlns:ttp="http://stix.mitre.org/TTP-1"
	xmlns:ta="http://stix.mitre.org/ThreatActor-1"
	xmlns:campaign="http://stix.mitre.org/Campaign-1"
    xmlns:cybox="http://cybox.mitre.org/cybox-2"
	xmlns:cyboxCommon="http://cybox.mitre.org/common-2"
    xmlns:AddressObj="http://cybox.mitre.org/objects#AddressObject-2"
	xmlns:FileObj="http://cybox.mitre.org/objects#FileObject-2"
	xmlns:SocketAddressObj="http://cybox.mitre.org/objects#SocketAddressObject-1" 
	xmlns:NetworkConnectionObj="http://cybox.mitre.org/objects#NetworkConnectionObject-2"
    xmlns:cyboxVocabs="http://cybox.mitre.org/default_vocabularies-2"
    xmlns:stixVocabs="http://stix.mitre.org/default_vocabularies-1"
    xmlns:example="http://example.com/"
    id="example:STIXPackage-33fe3b22-0201-47cf-85d0-97c02164528d"
    timestamp="2014-05-08T09:00:00.000000Z"
    version="1.1.1">
  <stix:Indicators>
    <stix:Indicator xsi:type="indicator:IndicatorType" id="example:Indicator-e35c5023-0a11-434c-a812-963793b45cec">
      <indicator:Type>Campaign Characteristics</indicator:Type>
      <indicator:Description>Indicator for a composite of characteristics for the use of specific malware and C2 infrastructure within a Campaign.</indicator:Description>
      <indicator:Composite_Indicator_Expression operator="AND">
        <indicator:Indicator xsi:type="indicator:IndicatorType" id="example:Indicator-611935aa-4db5-4b63-88ac-ac651634f09b">
          <indicator:Type xsi:type="stixVocabs:IndicatorTypeVocab-1.1">File Hash Watchlist</indicator:Type>
          <indicator:Description>Indicator for the hash of the foobar malware.</indicator:Description>
          <indicator:Observable id="example:Observable-556fa703-8cee-4f23-a135-22ff4d4c1255">
            <cybox:Object id="example:Object-1efb9f80-b059-4a78-a8d8-9ef9233945e3">
              <cybox:Properties xsi:type="FileObj:FileObjectType">
                <FileObj:Hashes>
                  <cyboxCommon:Hash>
                    <cyboxCommon:Type xsi:type="cyboxVocabs:HashNameVocab-1.0" condition="Equals">SHA1</cyboxCommon:Type>
                    <cyboxCommon:Simple_Hash_Value condition="Equals">e0110f4ca9d3858bf2da8b4cb0891b549526b534</cyboxCommon:Simple_Hash_Value>
                  </cyboxCommon:Hash>
                </FileObj:Hashes>
              </cybox:Properties>
            </cybox:Object>
          </indicator:Observable>
          <indicator:Indicated_TTP>
            <stixCommon:TTP xsi:type="ttp:TTPType" idref="example:ttp-97eecb7a-546d-4e60-ab21-53fdb1a8abec"/>
          </indicator:Indicated_TTP>
        </indicator:Indicator>

        <indicator:Indicator xsi:type="indicator:IndicatorType" id="example:Indicator-d83596ff-4700-4698-b8f6-e1ed3f03f0ab">
          <indicator:Type xsi:type="stixVocabs:IndicatorTypeVocab-1.1">C2</indicator:Type>
          <indicator:Description>Indicator for a particular C2 infstructure IP address.</indicator:Description>
          <indicator:Observable id="example:Observable-14a32139-39b1-4b83-897f-7fa3445f937e">
            <cybox:Object id="example:Object-e008deda-233a-412d-a7ed-bbb6925e5c06">
              <cybox:Properties xsi:type="NetworkConnectionObj:NetworkConnectionObjectType">
                <NetworkConnectionObj:Destination_Socket_Address>
                  <SocketAddressObj:IP_Address category="ipv4-addr">
                    <AddressObj:Address_Value condition="Equals">46.123.99.25</AddressObj:Address_Value>
                  </SocketAddressObj:IP_Address>
                </NetworkConnectionObj:Destination_Socket_Address>
              </cybox:Properties>
            </cybox:Object>
          </indicator:Observable>
          <indicator:Indicated_TTP>
            <stixCommon:TTP xsi:type="ttp:TTPType" idref="example:ttp-c9c82768-8e51-4a8c-b200-5f8d01acda5f"/>
          </indicator:Indicated_TTP>
        </indicator:Indicator>
		
		  <indicator:Indicator xsi:type="indicator:IndicatorType" id="example:Indicator-d83596ff-4700-4698-b8f6-e1ed3f04f0ab">
		  <indicator:Title>Test Indicators</indicator:Title>
            <indicator:Type xsi:type="stixVocabs:IndicatorTypeVocab-1.1">Malware Artifacts</indicator:Type>
            <indicator:Description>This is a set of false indicators for testing purposes and should not be used in production.</indicator:Description>
            <indicator:Observable id="example:Observable-93a98b4f-0202-4cba-bf70-d1fc6746f836">
                        <cybox:Observable_Composition operator="OR">
						    <cybox:Observable id="example:Observable-6e24f1f0-6c17-4ca9-90eb-3c3bf9ee8943">
                                <cybox:Object id="example:URI-61b86595-3132-44f3-83e6-010fb520e1d6">
                                    <cybox:Properties xsi:type="URIObj:URIObjectType" type="URL">
                                        <URIObj:Value condition="Equals">http://phonied-carmelo.io/orchestra-inculcating/1.1/chintzier.jsp</URIObj:Value>
                                    </cybox:Properties>
                                </cybox:Object>
                            </cybox:Observable>
							<cybox:Observable id="example:Observable-6e24f1f0-6c17-4ca9-90eb-3c3bf9ee8942">
                                <cybox:Object id="example:URI-61b86595-3132-44f3-83e6-010fb520e1d5">
                                    <cybox:Properties xsi:type="URIObj:URIObjectType" type="URL">
                                        <URIObj:Value condition="Equals">http://phonied-carmelo.io/orchestra-inculcating/1.0/chintzier.jsp</URIObj:Value>
                                    </cybox:Properties>
                                </cybox:Object>
                            </cybox:Observable>
                        </cybox:Observable_Composition>
			</indicator:Observable>
		  </indicator:Indicator>
      </indicator:Composite_Indicator_Expression>
      <indicator:Related_Campaigns>
        <indicator:Related_Campaign>
          <stixCommon:Campaign xsi:type="stixCommon:CampaignReferenceType" idref="example:campaign-d0b31826-d01e-48d1-8af1-5030a32b894a"/>
        </indicator:Related_Campaign>
      </indicator:Related_Campaigns>
    </stix:Indicator>
	 	
  </stix:Indicators>

  <stix:TTPs>
    <stix:TTP xsi:type="ttp:TTPType" id="example:ttp-97eecb7a-546d-4e60-ab21-53fdb1a8abec">
      <ttp:Behavior>
        <ttp:Malware>
          <ttp:Malware_Instance>
            <ttp:Type xsi:type="stixVocabs:MalwareTypeVocab-1.0">Remote Access Trojan</ttp:Type>
            <ttp:Title>foobar malware</ttp:Title>
          </ttp:Malware_Instance>
        </ttp:Malware>
      </ttp:Behavior>
    </stix:TTP>
    <stix:TTP xsi:type="ttp:TTPType" id="example:ttp-c9c82768-8e51-4a8c-b200-5f8d01acda5f">
      <ttp:Resources>
        <ttp:Infrastructure>
          <ttp:Type>Malware C2</ttp:Type>
        </ttp:Infrastructure>
      </ttp:Resources>
    </stix:TTP>
  </stix:TTPs>

  <stix:Campaigns>
    <stix:Campaign xsi:type="campaign:CampaignType" id="example:campaign-d0b31826-d01e-48d1-8af1-5030a32b894a">
      <campaign:Title>holy grail</campaign:Title>
      <campaign:Related_TTPs>
        <campaign:Related_TTP>
          <stixCommon:TTP xsi:type="ttp:TTPType" idref="example:ttp-97eecb7a-546d-4e60-ab21-53fdb1a8abec"/>
        </campaign:Related_TTP>
        <campaign:Related_TTP>
          <stixCommon:TTP xsi:type="ttp:TTPType" idref="example:ttp-c9c82768-8e51-4a8c-b200-5f8d01acda5f"/>
        </campaign:Related_TTP>
      </campaign:Related_TTPs>
      <campaign:Attribution>
        <campaign:Attributed_Threat_Actor>
          <stixCommon:Threat_Actor xsi:type="ta:ThreatActorType" idref="example:threatactor-d896f8dd-7dc6-45de-920c-21513c0024be"/>
        </campaign:Attributed_Threat_Actor>
      </campaign:Attribution>
    </stix:Campaign>
  </stix:Campaigns>

  <stix:Threat_Actors>
    <stix:Threat_Actor xsi:type="ta:ThreatActorType" id="example:threatactor-d896f8dd-7dc6-45de-920c-21513c0024be">
      <ta:Identity><stixCommon:Name>boobear</stixCommon:Name></ta:Identity>
      <ta:Observed_TTPs>
        <ta:Observed_TTP>
          <stixCommon:TTP xsi:type="ttp:TTPType" idref="example:ttp-c9c82768-8e51-4a8c-b200-5f8d01acda5f"/>
        </ta:Observed_TTP>
      </ta:Observed_TTPs>
    </stix:Threat_Actor>
  </stix:Threat_Actors>
</stix:STIX_Package>