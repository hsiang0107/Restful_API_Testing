<stix:STIX_Package 
	xmlns:cyboxCommon="http://cybox.mitre.org/common-2"
	xmlns:cybox="http://cybox.mitre.org/cybox-2"
	xmlns:cyboxVocabs="http://cybox.mitre.org/default_vocabularies-2"
	xmlns:AddressObj="http://cybox.mitre.org/objects#AddressObject-2"
	xmlns:FileObj="http://cybox.mitre.org/objects#FileObject-2"
	xmlns:URIObj="http://cybox.mitre.org/objects#URIObject-2"
	xmlns:exampledata="http://stix.exampledata.org"
	xmlns:incident="http://stix.mitre.org/Incident-1"
	xmlns:indicator="http://stix.mitre.org/Indicator-2"
	xmlns:ttp="http://stix.mitre.org/TTP-1"
	xmlns:stixCommon="http://stix.mitre.org/common-1"
	xmlns:stixVocabs="http://stix.mitre.org/default_vocabularies-1"
	xmlns:stix="http://stix.mitre.org/stix-1"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://cybox.mitre.org/common-2 http://cybox.mitre.org/XMLSchema/common/2.1/cybox_common.xsd
	http://cybox.mitre.org/cybox-2 http://cybox.mitre.org/XMLSchema/core/2.1/cybox_core.xsd
	http://cybox.mitre.org/default_vocabularies-2 http://cybox.mitre.org/XMLSchema/default_vocabularies/2.1/cybox_default_vocabularies.xsd
	http://cybox.mitre.org/objects#AddressObject-2 http://cybox.mitre.org/XMLSchema/objects/Address/2.1/Address_Object.xsd
	http://cybox.mitre.org/objects#FileObject-2 http://cybox.mitre.org/XMLSchema/objects/File/2.1/File_Object.xsd
	http://cybox.mitre.org/objects#URIObject-2 http://cybox.mitre.org/XMLSchema/objects/URI/2.1/URI_Object.xsd
	http://stix.mitre.org/Incident-1 http://stix.mitre.org/XMLSchema/incident/1.1.1/incident.xsd
	http://stix.mitre.org/Indicator-2 http://stix.mitre.org/XMLSchema/indicator/2.1.1/indicator.xsd
	http://stix.mitre.org/TTP-1 http://stix.mitre.org/XMLSchema/ttp/1.1.1/ttp.xsd
	http://stix.mitre.org/common-1 http://stix.mitre.org/XMLSchema/common/1.1.1/stix_common.xsd
	http://stix.mitre.org/default_vocabularies-1 http://stix.mitre.org/XMLSchema/default_vocabularies/1.1.1/stix_default_vocabularies.xsd
	http://stix.mitre.org/stix-1 http://stix.mitre.org/XMLSchema/core/1.1.1/stix_core.xsd" id="exampledata:Package-8e08e10e-c083-4573-bc77-04662bfae1f7" version="1.1.1" timestamp="2018-05-31T10:49:13.138604+00:00">
    <stix:STIX_Header>
        <stix:Title>[TESTING] Test Indicators</stix:Title>
        <stix:Package_Intent xsi:type="stixVocabs:PackageIntentVocab-1.0">Indicators - Watchlist</stix:Package_Intent>
        <stix:Description>These indicators are automatically generated and should not be used in live environments.</stix:Description>
    </stix:STIX_Header>
    <stix:Indicators>
        <stix:Indicator id="exampledata:indicator-9beb3e23-6bc2-45d3-b712-c43a2be4c64b" timestamp="2018-05-31T10:49:13.138952+00:00" xsi:type='indicator:IndicatorType' negate="false" version="2.1.1">
            <indicator:Title>Test Indicators</indicator:Title>
            <indicator:Type xsi:type="stixVocabs:IndicatorTypeVocab-1.1">Malware Artifacts</indicator:Type>
            <indicator:Description>This is a set of false indicators for testing purposes and should not be used in production.</indicator:Description>
            <indicator:Valid_Time_Position>
                <indicator:Start_Time precision="second">2018-05-31T10:49:13.139344+00:00</indicator:Start_Time>
                <indicator:End_Time precision="second">2018-06-07T10:49:13.139349+00:00</indicator:End_Time>
            </indicator:Valid_Time_Position>
            <indicator:Observable id="exampledata:Observable-93a98b4f-0202-4cba-bf70-d1fc6746f836">
                        <cybox:Observable_Composition operator="AND">
                            <cybox:Observable id="exampledata:Observable-3e67ed38-ad10-42cd-89bb-64d12b8ef9b1">
                                <cybox:Object id="exampledata:Address-cd00283d-c8fc-461e-a5ab-51e07a557312">
                                    <cybox:Properties xsi:type="AddressObj:AddressObjectType" category="ipv4-addr">
                                        <AddressObj:Address_Value condition="Equals">166.18.145.116</AddressObj:Address_Value>
                                    </cybox:Properties>
                                </cybox:Object>
                            </cybox:Observable>
                            <cybox:Observable id="exampledata:Observable-59f83ed2-4611-4869-8df3-c487685f75b4">
                                <cybox:Object id="exampledata:File-b6f2a28b-4e2a-44a3-9812-193301d04dd9">
                                    <cybox:Properties xsi:type="FileObj:FileObjectType">
                                        <FileObj:Hashes>
                                            <cyboxCommon:Hash>
                                                <cyboxCommon:Type condition="Equals" xsi:type="cyboxVocabs:HashNameVocab-1.0">SHA1</cyboxCommon:Type>
                                                <cyboxCommon:Simple_Hash_Value condition="Equals">5c2d9762e69db978d2db4b95cc2711dfaa144064</cyboxCommon:Simple_Hash_Value>
                                            </cyboxCommon:Hash>
                                        </FileObj:Hashes>
                                    </cybox:Properties>
                                </cybox:Object>
                            </cybox:Observable>
							<cybox:Observable id="exampledata:Observable-6e24f1f0-6c17-4ca9-90eb-3c3bf9ee8942">
                                <cybox:Object id="exampledata:URI-61b86595-3132-44f3-83e6-010fb520e1d5">
                                    <cybox:Properties xsi:type="URIObj:URIObjectType" type="URL">
                                        <URIObj:Value condition="Equals">http://phonied-carmelo.io/orchestra-inculcating/chintzier.jsp</URIObj:Value>
                                    </cybox:Properties>
                                </cybox:Object>
                            </cybox:Observable>
                        </cybox:Observable_Composition>
						</indicator:Observable>
            <indicator:Indicated_TTP>
                <stixCommon:TTP id="exampledata:ttp-e43e0467-8db0-dc33-f6e9-c70786ab6a25" timestamp="2018-05-31T10:49:13.139506+00:00" xsi:type='ttp:TTPType' version="1.1.1">
                    <ttp:Title>External TTP</ttp:Title>
                </stixCommon:TTP>
            </indicator:Indicated_TTP>
            <indicator:Confidence timestamp="2018-05-31T10:49:13.139270+00:00">
                <stixCommon:Value xsi:type="stixVocabs:HighMediumLowVocab-1.0">None</stixCommon:Value>
            </indicator:Confidence>
            <indicator:Producer>
                <stixCommon:Identity id="exampledata:Identity-e0c82464-4867-46d8-aaa4-2964d94862b8">
                    <stixCommon:Name>Cosive STIX Example Generator</stixCommon:Name>
                </stixCommon:Identity>
                <stixCommon:Time>
                    <cyboxCommon:Produced_Time>2018-05-31T10:49:13.139116+00:00</cyboxCommon:Produced_Time>
                </stixCommon:Time>
            </indicator:Producer>
        </stix:Indicator>
    </stix:Indicators>
</stix:STIX_Package>